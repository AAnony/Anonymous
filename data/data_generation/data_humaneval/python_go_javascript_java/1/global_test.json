[{"instruction": "// Cleanup stops active swarm node. This is run before daemon shutdown.", "input": "go language", "output": "func (c *Cluster) Cleanup() {\n\tc.controlMutex.Lock()\n\tdefer c.controlMutex.Unlock()\n\n\tc.mu.Lock()\n\tnode := c.nr\n\tif node == nil {\n\t\tc.mu.Unlock()\n\t\treturn\n\t}\n\tstate := c.currentNodeState()\n\tc.mu.Unlock()\n\n\tif state.IsActiveManager() {\n\t\tactive, reachable, unreachable, err := managerStats(state.controlClient, state.NodeID())\n\t\tif err == nil {\n\t\t\tsinglenode := active && isLastManager(reachable, unreachable)\n\t\t\tif active && !singlenode && removingManagerCausesLossOfQuorum(reachable, unreachable) {\n\t\t\t\tlogrus.Errorf(\"Leaving cluster with %v managers left out of %v. Raft quorum will be lost.\", reachable-1, reachable+unreachable)\n\t\t\t}\n\t\t}\n\t}\n\n\tif err := node.Stop(); err != nil {\n\t\tlogrus.Errorf(\"failed to shut down cluster node: %v\", err)\n\t\tsignal.DumpStacks(\"\")\n\t}\n\n\tc.mu.Lock()\n\tc.nr = nil\n\tc.mu.Unlock()\n}", "category": "Python"}]